version: "3.9"
services:
  app:
    env_file:
      - ./.env
    depends_on:
      - tarantool
    build:
      context: .
      dockerfile: docker/dev.Dockerfile
    command: air -c .air.toml
    ports:
      - ${APP_PORT}:${APP_PORT}
      - ${PROM_PORT}:${PROM_PORT} # prometheus
    environment:
      - LDFLAGS=${LDFLAGS}
    volumes:
      - .:/app

#  nginx:
#    image: nginx:1.21
#    container_name: nginx-lb
#    restart: on-failure
#    volumes:
#      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
#    ports:
#      - "4088:80"
#      - "4098:8080"
#
#  app-2:
#    env_file:
#      - ./.env
#    restart: "no"
#    depends_on:
#      - tarantool
#      - mysql-slave
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#    container_name: app-2
#    environment:
#      - LDFLAGS=${LDFLAGS}
#
#  app-1:
#    env_file:
#      - ./.env
#    restart: "no"
#    depends_on:
#      - tarantool
#      - mysql-slave
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#    container_name: app-1
#    environment:
#      - LDFLAGS=${LDFLAGS}

  redis:
    image: redis
    ports:
      - 6379:${RE_PORT}

#  haproxy:
#    image: haproxy:2.4
#    container_name: haproxy-lb
#    restart: "no"
#    volumes:
#      - "./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
#    ports:
#      - "3306:3306"

  mysql:
    image: mysql:5.7
    container_name: master_db
    environment:
      MYSQL_DATABASE: ${MY_DB_NAME}
      MYSQL_PASSWORD: ${MY_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MY_PASSWORD}
      MYSQL_TCP_PORT: ${MY_PORT}
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - ${MY_PORT}:${MY_PORT}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/master.cnf:/etc/my.cnf

#  mysql-slave:
#    image: mysql:5.7
#    container_name: slave_db
#    depends_on:
#      - mysql
#    environment:
#      MYSQL_DATABASE: ${MY_DB_NAME}
#      MYSQL_PASSWORD: ${MY_PASSWORD}
#      MYSQL_ROOT_PASSWORD: ${MY_PASSWORD}
#      MYSQL_TCP_PORT: ${MY_SLAVE_PORT}
#      MYSQL_ALLOW_EMPTY_PASSWORD: true
#    ports:
#      - ${MY_SLAVE_PORT}:${MY_SLAVE_PORT}
#    volumes:
#      - mysql-slave-data:/var/lib/mysql
#      - ./mysql/slave.cnf:/etc/my.cnf

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - ${PROM_GUI_PORT}:${PROM_GUI_PORT}
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  tarantool:
    image: tarantool/tarantool:latest
    restart: always
#    environment:
#      TARANTOOL_USER: ${TA_USER}
#      TARANTOOL_PASSWORD: ${TA_PASSWORD}
    ports:
      - "3301:3301"
    platform: linux/amd64
    command: tarantool /opt/tarantool/init.lua
    volumes:
      - ./tarantool:/var/lib/tarantool
      - ./tarantool/init.lua:/opt/tarantool/init.lua

#  rabbitmq:
#    image: 'rabbitmq:3-management'
#    volumes:
#      - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
#    ports:
#      - "15672:15672"
#      - ${RA_PORT}:${RA_PORT}
#    healthcheck:
#      test: [ "CMD", "rabbitmqctl", "status" ]
#      interval: 5s
#      timeout: 15s
#      retries: 5

volumes:
  grafana-data:
  mysql-data:
#  mysql-slave-data:
